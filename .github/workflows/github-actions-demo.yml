name: Deploy with Terraform Cloud and Vault

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDCRole
          aws-region: eu-west-2

      - name: Authenticate with Vault using AppRole
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          vault login -method=approle role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID > /dev/null

      - name: Fetch AWS Credentials from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
        run: |
          # Retrieve AWS credentials from Vault
          response=$(vault read -format=json aws/creds/deploy)
          aws_access_key_id=$(echo "$response" | jq -r '.data.access_key')
          aws_secret_access_key=$(echo "$response" | jq -r '.data.secret_key')
          # Set AWS credentials as environment variables
          echo "AWS_ACCESS_KEY_ID=$aws_access_key_id" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$aws_secret_access_key" >> $GITHUB_ENV

      - name: Run Terraform Init
        run: terraform init

      - name: Run Terraform Apply
        run: terraform apply -auto-approve